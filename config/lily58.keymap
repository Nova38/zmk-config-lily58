/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define L_DEFAULT 0
#define L_LOWER   1
#define L_RAISE   2
#define L_NAV 	  3



// / {
//         ext-power {
//                 init-delay-ms = <50>;
//         };
// };
// &caps_word {
//     continue-list = <UNDERSCORE>;
// };

// &kscan0 {
//     debounce-scan-period-ms = <2>;
//  };

// &sk {
//     release-after-ms = <500>;
// };

/ {


	keymap {
		compatible = "zmk,keymap";

		default_layer {
			// ------------------------------------------------------------------------------------------------------------
			// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
			// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
			// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
			// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
			//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | L_LOWER   |
						bindings = <
			&kp ESC    &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
			&kp TAB    &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp MINUS
			&kp LCTRL  &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
			&kp LSHFT  &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp DEL 
									&kp LALT  &kp LGUI &mo L_LOWER &kp SPACE  &kp RET  &mo L_RAISE &kp BSPC  &mo L_LOWER
						>;
		};


		
		lower_layer {
			// ------------------------------------------------------------------------------------------------------------
			// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
			// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
			// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
			// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
			//                     |      |      |      |        |  |       |      |       |       |
						bindings = <
			&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans          &trans    &trans    &trans
			&kp F1     &kp N1           &kp N2            &kp N3            &kp N4       &kp N5                       &kp N6    &kp N7    &kp N8          &kp N9    &kp N0    &kp F12
			&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE
			&trans     &ext_power EP_ON &trans &ext_power EP_ON &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC  &kp PIPE
														  &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
						>;

		};


		raise_layer {
			// ------------------------------------------------------------------------------------------------------------
			// |       |     |     |      |      |      |                   |outTog|       |CapWord|      | voice |  pip  |
			// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |   stego    |
			// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   | <-   |   V   |  ^    |  ->  | vol ^ | Vol V |
			// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
			//                     |      |      |      |        |  |       |      |       |       |
						bindings = <
			&trans    &trans &trans &trans  &trans  &trans                       &out OUT_TOG &trans &caps_word    &trans    &kp C_VOICE_COMMAND          &kp C_PIP
			&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9    &kp N0    	   &trans
			&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &kp LEFT  	 &kp DOWN  &kp UP    &kp RIGHT &kp C_VOL_UP    &kp C_VOL_DN
			&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT        &kp BSLH
									&trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
						>;
};

		nav_layer {
			// ------------------------------------------------------------------------------------------------------------
			// |       |     |     |      |      |      |                   |      |       |       |      | voice |  pip  |
			// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
			// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   | <-   |   V   |  ^    |  ->  | vol ^ | Vol V |
			// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
			//                     |      |      |      |        |  |       |      |       |       |
						bindings = <
			&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans    &kp C_VOICE_COMMAND          &kp C_PIP
			&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9    &kp N0    	   &trans
			&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &kp LEFT  	 &kp DOWN  &kp UP    &kp RIGHT &kp K_VOL_UP    &kp C_VOL_DN
			&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT        &kp BSLH
									&trans  &trans  &trans    &trans   &trans    &trans      &trans    &to L_DEFAULT
						>;
			};

	};
};
